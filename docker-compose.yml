name: cost-accounting

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:8070"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - cost-accounting-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://api:8070/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
    init: true

  database:
    container_name: database
    image: postgres:latest
    restart: always
    ports:
      - "${DATABASE_PORT}:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - DB_PORT=${DATABASE_PORT}
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $${DATABASE_USER} -d $${DATABASE_NAME}' ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - cost-accounting-network

networks:
  cost-accounting-network:
    driver: bridge

volumes:
  database: